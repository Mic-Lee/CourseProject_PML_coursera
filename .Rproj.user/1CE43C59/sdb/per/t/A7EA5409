{
    "collab_server" : "",
    "contents" : "---\ntitle: \"PML_CourseProject_present\"\nauthor: \"Haoming\"\ndate: \"3/24/2017\"\noutput: html_document\n---\n\n```{r setup, include=FALSE}\nknitr::opts_chunk$set(echo = TRUE)\n```\n```{r}\nlibrary(caret)\nlibrary(data.table)\nlibrary(rpart)\nlibrary(rpart.plot)\nlibrary(RColorBrewer)\nlibrary(rattle)\nlibrary(randomForest)\nlibrary(knitr)\nlibrary(e1071)\n\n#loading data\npath <- getwd()\ntraining.path <- file.path(path, \"pml-training.csv\")\ntesting.path <- file.path(path,\"pml-testing.csv\")\ntraining.data <- fread(training.path)\ntesting.data <- fread(testing.path)\n\n#processing data\n## sub.train and sub.test\ninTrain <- createDataPartition(y=training.data$classe, p=0.6, list=FALSE)\nmyTraining <- training.data[inTrain, ]\nmyTesting <- training.data[-inTrain, ]\ndim(myTraining); dim(myTesting)\n##transfer inorder to clean\nmyTraining <- as.data.frame(myTraining)\nmyTesting <- as.data.frame(myTesting)\n##clean var with more than 55% NAs\ntraining.minusNA <- myTraining \nfor(i in 1:length(myTraining)) { \n  if( sum( is.na( myTraining[, i] ) ) /nrow(myTraining) >= .6 ) { \n    for(j in 1:length(training.minusNA)) {\n      if( length( grep(names(myTraining[i]), names(training.minusNA)[j]) ) ==1)  { \n        training.minusNA <- training.minusNA[ , -j] \n      }   \n    } \n  }\n}\nmyTraining <- training.minusNA\nrm(training.minusNA)\n##remove some personal and nonrelative vars\nmyTraining <- myTraining[,8:length(myTraining)]\n##remove NearZeroVariance variables\nnzv.tr <- nearZeroVar(myTraining, saveMetrics=TRUE)\nmyTraining <- myTraining[,nzv.tr$nzv==FALSE]\n\n\n##synchronizing processing\nmyTesting <- myTesting[colnames(myTraining)]\ntesting.data <- as.data.frame(testing.data)\ntesting.data <- testing.data[colnames(myTraining[, -53])]             \ndim(myTesting);dim(testing.data)\n\n##coerce the data into the same types\nfor (i in 1:length(testing.data) ) {\n  for(j in 1:length(myTraining)) {\n    if( length( grep(names(myTraining[i]), names(testing.data)[j]) ) == 1)  {\n      class(testing.data[j]) <- class(myTraining[i])\n    }      \n  }      \n}\n\n##for random forest\nmyTraining$classe = as.factor(myTraining$classe)\nmyTesting$classe = as.factor(myTesting$classe)\n\n```\n\n```{r}\n#pre with decision tree\nset.seed(12345)\nmodFitA1 <- rpart(classe ~ ., data=myTraining, method=\"class\")\nfancyRpartPlot(modFitA1, tweak = 2)\n# rpart.plot(modFitA1)\n# prp(modFitA1, main=\"An Example\",\n#     type=1, fallen=T, branch=.3, round=0, leaf.round=9,\n#     clip.right.labs=F, under.cex=1,\n#     box.palette=\"GnYlRd\",\n#     prefix=\"ozone\\n\", branch.col=\"gray\", branch.lwd=2,\n#     extra=101, under=T, lt=\" < \", ge=\" >= \", cex.main=1.5,tweak=1.2,gap = 0)\n\npredictionsA1 <- predict(modFitA1, myTesting, type = \"class\")\ncmtree <- confusionMatrix(predictionsA1, myTesting$classe)\ncmtree\nplot(cmtree$table, col = cmtree$byClass, main = paste(\"Decision Tree Confusion Matrix: Accuracy =\", round(cmtree$overall['Accuracy'], 4)))\n\n#pre with random forest\nset.seed(12345)\n\nmodFitB1 <- randomForest(classe ~ ., data=myTraining, method = \"Class\")\npredictionB1 <- predict(modFitB1, myTesting, type = \"class\")\ncmrf <- confusionMatrix(predictionB1, myTesting$classe)\ncmrf\nplot(modFitB1)\nplot(cmrf$table, col = cmtree$byClass, main = paste(\"Random Forest Confusion Matrix: Accuracy =\", round(cmrf$overall['Accuracy'], 4)))#this plot referenced from online resourse\n\n#pre with SVM\n# linear SVM\nsvmfit <- svm(classe ~ ., data = myTraining, kernel = \"linear\", scale = T) # linear svm, scaling turned OFF\nprint(svmfit)\ncompareTable <- table (myTraining$classe, predict(svmfit));compareTable  # tabulate\nmean(myTraining$classe != predict(svmfit)) # 20.66% misclassification error\n\n#then the random forest model is the best model\nbestfitmodel <- modFitB1\n\n#Predicting Results on the Test Data\npredictionB2 <- predict(bestfitmodel, testing.data, type = \"class\")\npredictionB2\n```\n\n",
    "created" : 1490331882733.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2179406263",
    "id" : "A7EA5409",
    "lastKnownWriteTime" : 1490332262,
    "last_content_update" : 1490332262949,
    "path" : "D:/MicFile/百度云同步盘/R_Workspace/Programs in Coursera/Practical Machine Learning/Final Project/PML_CourseProject_presentation.Rmd",
    "project_path" : "PML_CourseProject_presentation.Rmd",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 3,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_markdown"
}